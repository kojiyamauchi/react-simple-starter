name: Delivery
on:
  pull_request:
    types: closed
    branches: develop

env:
  # Boolean is No Use, Because It's Value is Out Put String.
  # When Using Env Var in Conditional Branch, Too Bad.
  # ```
  # EXAMPLE_ENV: true
  # if: EXAMPLE_ENV == 'true'
  # ```
  LAUNCH_BUILD: off # Launch Build. [ on, off ]
  LAUNCH_DEPLOY: off # Launch Deployment. [ on, off ]
  DEPLOY_TYPE: github-pages # Deploy Type. [ github-pages, netlify, ftp ]
  ENDPOINT_GITHUB_PAGES: # When Using GitHub Pages, Add Endpoint.
  ENDPOINT_NETLIFY: # When Using Netlify, Add Endpoint.
  ENDPOINT_FTP: # When Using FTP, Add Endpoint.
  ENDPOINT_REDIRECT: # When Create SPA & Deploy on GitHub Pages, Add GitHub Pages Endpoint.

jobs:
  delivery:
    name: Build & Deploy
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Execution Environment for Node
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: Set Env
        run: |
          echo "LAUNCH_BUILD=${LAUNCH_BUILD}" >> $GITHUB_ENV
          echo "LAUNCH_DEPLOY=${LAUNCH_DEPLOY}" >> $GITHUB_ENV
          echo "DEPLOY_TYPE=${DEPLOY_TYPE}" >> $GITHUB_ENV
          echo "ENDPOINT_REDIRECT=${ENDPOINT_REDIRECT}" >> $GITHUB_ENV
      - name: Get Yarn Cache Directory
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache Node Modules
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install Dependencies
        run: yarn
      - name: Do Build
        if: env.LAUNCH_BUILD == 'on'
        run: yarn build
      - name: Clean Delivery Directory
        if: env.LAUNCH_DEPLOY == 'on'
        run: rm delivery/.gitkeep
      - name: Deploy FTP
        if: env.LAUNCH_DEPLOY == 'on' && env.DEPLOY_TYPE == 'ftp'
        uses: SamKirkland/FTP-Deploy-Action@4.0.0
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: delivery/
          server-dir: ${{ secrets.FTP_REMOTE_ROOT }}
      - name: Deploy to Product Branch
        if: env.LAUNCH_DEPLOY == 'on'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: product
          publish_dir: ./delivery
      - name: Preparation for Copy to Main Branch
        if: env.LAUNCH_DEPLOY == 'on'
        run: npx rimraf delivery/* && touch delivery/.gitkeep
      - name: Copy to Main Branch
        if: env.LAUNCH_DEPLOY == 'on'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: main
          publish_dir: ./

  report:
    name: Done's Report
    needs: delivery
    runs-on: ubuntu-latest
    steps:
      - name: Set Env
        run: |
          echo "LAUNCH_DEPLOY=${LAUNCH_DEPLOY}" >> $GITHUB_ENV
          echo "DEPLOY_TYPE=${DEPLOY_TYPE}" >> $GITHUB_ENV
          echo "ENDPOINT_GITHUB_PAGES=${ENDPOINT_GITHUB_PAGES}" >> $GITHUB_ENV
          echo "ENDPOINT_NETLIFY=${ENDPOINT_NETLIFY}" >> $GITHUB_ENV
          echo "ENDPOINT_FTP=${ENDPOINT_FTP}" >> $GITHUB_ENV
      - name: Finished GitHub Pages Deploy
        if: env.LAUNCH_DEPLOY == 'on' && env.DEPLOY_TYPE == 'github-pages' && env.ENDPOINT_GITHUB_PAGES != null
        run: echo ${{ env.ENDPOINT_GITHUB_PAGES }}
      - name: Finished Netlify Deploy
        if: env.LAUNCH_DEPLOY == 'on' && env.DEPLOY_TYPE == 'netlify' && env.ENDPOINT_NETLIFY != null
        run: echo ${{ env.ENDPOINT_NETLIFY }}
      - name: Finished FTP Deploy
        if: env.LAUNCH_DEPLOY == 'on' && env.DEPLOY_TYPE == 'ftp' && env.ENDPOINT_FTP != null
        run: echo ${{ env.ENDPOINT_FTP }}
